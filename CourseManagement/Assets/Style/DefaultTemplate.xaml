<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:cm="clr-namespace:StudentManagementSystem.AttachProperties">

    <ControlTemplate TargetType="Button" x:Key="WindowControlButtonTemplate">
        <Border CornerRadius="3" Background="Transparent" BorderBrush="Transparent" Width="30" Height="30">
            <Grid>
                <TextBlock Text="{TemplateBinding Content}" Name="tt" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" FontFamily="{DynamicResource Iconfont}" FontSize="{TemplateBinding FontSize}"/>
                <Border CornerRadius="3" Background="#22FFFFFF" Name="back" Visibility="Hidden"/>
                <Border CornerRadius="3" Background="#62FFFFFF" Name="back_1" Visibility="Hidden"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Visibility" Value="Visible" TargetName="back"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Visibility" Value="Visible" TargetName="back_1"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate TargetType="Button" x:Key="WindowControlButtonTemplate_1">
        <Border CornerRadius="3" Background="Transparent" BorderBrush="Transparent" Width="30" Height="30">
            <Grid>
                <TextBlock Text="{TemplateBinding Content}" Name="tt" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" FontFamily="{DynamicResource Iconfont}" FontSize="{TemplateBinding FontSize}"/>
                <!--
                <Border CornerRadius="3" Background="#22FFFFFF" Name="back" Visibility="Hidden"/>
                <Border CornerRadius="3" Background="#62FFFFFF" Name="back_1" Visibility="Hidden"/>
                -->
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#FFA84141" TargetName="tt"/>
                <!--<Setter Property="Visibility" Value="Visible" TargetName="back"/>-->
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="red" TargetName="tt"/>
                <!--<Setter Property="Visibility" Value="Visible" TargetName="back_1"/>-->
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate TargetType="Button" x:Key="GeneralButtonControlTemplate">
        <Border Name="border" Width="80" Height="80" CornerRadius="3" Background="{TemplateBinding Background}" BorderBrush="Transparent">
            <Grid>
                <ContentControl Content="{TemplateBinding Content}" Margin="20,4" FontSize="13"
                                VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="Width" 
                                             From="75" To="80" Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <QuarticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="Height" 
                                             From="75" To="80" Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <QuarticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="Width" 
                                             From="80" To="75" Duration="0:0:0">
                                <DoubleAnimation.EasingFunction>
                                    <QuarticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="Height" 
                                             From="80" To="75" Duration="0:0:0">
                                <DoubleAnimation.EasingFunction>
                                    <QuarticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">

            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="GamesExampleItemControlTryTemplate" TargetType="Button">
        <Grid Width="{TemplateBinding Width}"
              Height="{TemplateBinding Height}">
            <Border x:Name="border" 
                    CornerRadius="25" 
                    Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}"
                    RenderTransformOrigin="0.5 0.5">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="text" 
                           Text="{TemplateBinding Content}"
                           FontSize="{TemplateBinding FontSize}"
                           FontFamily="{TemplateBinding FontFamily}"
                           FontStyle="{TemplateBinding FontStyle}"
                           Foreground="{TemplateBinding Foreground}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Effect="{x:Null}"/>
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Padding" Value="{Binding Path=(cm:UIProperties.MouseOverMargin),RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter TargetName="border" Property="Background" Value="{Binding Path=(cm:UIProperties.MouseOverBackground),RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter TargetName="border" Property="BorderBrush" Value="{Binding Path=(cm:UIProperties.MouseOverBorderBrush),RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter TargetName="text" Property="Foreground" Value="{Binding Path=(cm:UIProperties.MouseOverForeground),RelativeSource={RelativeSource TemplatedParent}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="NormalButtonTemplate" TargetType="Button">
        <Grid Width="{TemplateBinding Width}"
              Height="{TemplateBinding Height}">
            <Border x:Name="border" 
                    CornerRadius="{TemplateBinding cm:UIProperties.CornerRadius}" 
                    Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}"
                    RenderTransformOrigin="0.5 0.5">
                <!--
                <Border.RenderTransform>
                    <ScaleTransform x:Name="scale" ScaleX="1" ScaleY="1"/>
                </Border.RenderTransform>
                -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="text"
                           Text="{TemplateBinding Content}"
                           FontFamily="{TemplateBinding FontFamily}"
                           FontSize="{TemplateBinding FontSize}"
                           FontStyle="{TemplateBinding FontStyle}"
                           Foreground="{TemplateBinding Foreground}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Effect="{x:Null}"/>
                    <Image x:Name="image" Grid.Column="1" Source="{TemplateBinding cm:UIProperties.Icon}"
                           Width="{TemplateBinding cm:UIProperties.IconWidth}" Height="{TemplateBinding cm:UIProperties.IconHeight}" 
                           Margin="{TemplateBinding cm:UIProperties.IconMargin}" Stretch="None" Effect="{x:Null}">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="Source" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect" Value="{x:Null}"/>
                <Setter TargetName="text" Property="Foreground" Value="{Binding Path=(cm:UIProperties.MouseOverForeground),RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter TargetName="border" Property="Padding" Value="{Binding Path=(cm:UIProperties.MouseOverMargin),RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter TargetName="border" Property="BorderBrush" Value="{Binding Path=(cm:UIProperties.MouseOverBorderBrush),RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter TargetName="border" Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Opacity="{Binding Path=(cm:UIProperties.MouseOverDropShadowOpcity),RelativeSource={RelativeSource TemplatedParent}}"
                                          Direction="-90" 
                                          Color="{Binding Path=(cm:UIProperties.MouseOverDropShadowColor),RelativeSource={RelativeSource TemplatedParent}}" 
                                          ShadowDepth="{Binding Path=(cm:UIProperties.MouseOverDropShadowDepth),RelativeSource={RelativeSource TemplatedParent}}" 
                                          BlurRadius="{Binding Path=(cm:UIProperties.MouseOverDropShadowBlurRadius),RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="border" Property="Background" Value="{Binding Path=(cm:UIProperties.MouseOverBackground),RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter TargetName="image" Property="Source" Value="{Binding Path=(cm:UIProperties.MouseOverIcon),RelativeSource={RelativeSource TemplatedParent}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MenuButtonTemplate" TargetType="Button">
        <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="#00000000">
            <Grid>
                <Image x:Name="image" Source="{TemplateBinding cm:UIProperties.Icon}"
                       Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Effect="{x:Null}" RenderTransformOrigin="0.5 0.5">
                    <Image.RenderTransform>
                        <ScaleTransform x:Name="scale" ScaleX="1" ScaleY="1"/>
                    </Image.RenderTransform>
                </Image>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleX" 
                                             To="0.9" Duration="0:0:0.1">
                                <DoubleAnimation.EasingFunction>
                                    <QuarticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleY" 
                                             To="0.9" Duration="0:0:0.1">
                                <DoubleAnimation.EasingFunction>
                                    <QuarticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleX" 
                                             To="1" Duration="0:0:0.1">
                                <DoubleAnimation.EasingFunction>
                                    <QuarticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleY" 
                                             To="1" Duration="0:0:0.1">
                                <DoubleAnimation.EasingFunction>
                                    <QuarticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="noNormalButtonTemplate" TargetType="Button">
        <Grid Width="{TemplateBinding Width}"
              Height="{TemplateBinding Height}">
            <Border x:Name="border" 
                    CornerRadius="{TemplateBinding cm:UIProperties.CornerRadius}" 
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    RenderTransformOrigin="0.5 0.5">
                <!--
                <Border.RenderTransform>
                    <ScaleTransform x:Name="scale" ScaleX="1" ScaleY="1"/>
                </Border.RenderTransform>
                -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="text"
                           Text="{TemplateBinding Content}"
                           FontSize="{TemplateBinding FontSize}"
                           FontFamily="{TemplateBinding FontFamily}"
                           FontStyle="{TemplateBinding FontStyle}"
                           Foreground="{TemplateBinding Foreground}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Effect="{x:Null}"/>
                    <!--
                    <Image x:Name="image" Source="{TemplateBinding cm:UIProperties.Icon}" Width="{TemplateBinding cm:UIProperties.IconWidth}" 
                           Height="{TemplateBinding cm:UIProperties.IconHeight}" Stretch="None" Grid.Column="1" Effect="{x:Null}"
                           Margin="{TemplateBinding cm:UIProperties.IconMargin}">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="Source" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    -->
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect" Value="{x:Null}"/>
                <Setter TargetName="text" Property="Foreground" Value="{Binding Path=(cm:UIProperties.MouseOverForeground),RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter TargetName="border" Property="Padding" Value="{Binding Path=(cm:UIProperties.MouseOverMargin),RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter TargetName="border" Property="BorderBrush" Value="{Binding Path=(cm:UIProperties.MouseOverBorderBrush),RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter TargetName="border" Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Opacity="{Binding Path=(cm:UIProperties.MouseOverDropShadowOpcity),RelativeSource={RelativeSource TemplatedParent}}"
                                          Direction="-90" 
                                          Color="{Binding Path=(cm:UIProperties.MouseOverDropShadowColor),RelativeSource={RelativeSource TemplatedParent}}" 
                                          ShadowDepth="{Binding Path=(cm:UIProperties.MouseOverDropShadowDepth),RelativeSource={RelativeSource TemplatedParent}}" 
                                          BlurRadius="{Binding Path=(cm:UIProperties.MouseOverDropShadowBlurRadius),RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="border" Property="Background" Value="{Binding Path=(cm:UIProperties.MouseOverBackground),RelativeSource={RelativeSource TemplatedParent}}"/>
                <!--<Setter TargetName="image" Property="Source" Value="{Binding Path=(cm:UIProperties.MouseOverIcon),RelativeSource={RelativeSource TemplatedParent}}"/>-->
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <!--
            <Trigger Property="IsPressed" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleX" 
                                             To="0.9" Duration="0:0:0.1">
                                <DoubleAnimation.EasingFunction>
                                    <QuarticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleY" 
                                             To="0.9" Duration="0:0:0.1">
                                <DoubleAnimation.EasingFunction>
                                    <QuarticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
            -->
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>